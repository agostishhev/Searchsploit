package com.arterialist.searchsploit.adapters;

import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import com.arterialist.searchsploit.R;
import com.arterialist.searchsploit.models.Exploit;

import java.util.ArrayList;

import butterknife.Bind;
import butterknife.ButterKnife;
import butterknife.OnClick;

public class ExploitAdapter extends RecyclerView.Adapter<ExploitAdapter.ViewHolder> {

    private ArrayList<Exploit> items;
    private OnItemClickListener onItemClickListener;

    public ExploitAdapter(ArrayList<Exploit> items) {
        this.items = items;
    }

    @Override
    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_exploit, parent, false);
        return new ViewHolder(view);
    }

    @Override
    public void onBindViewHolder(ViewHolder holder, int position) {
        Exploit exploit = items.get(position);
        holder.exploitIdTV.setText(String.valueOf(exploit.getId()));
        holder.exploitDescriptionTV.setText(exploit.getTitle());
    }

    @Override
    public int getItemCount() {
        return items.size();
    }

    public void setItems(ArrayList<Exploit> items) {
        this.items = items;
        notifyItemRangeChanged(0, this.items.size());
    }

    public void setOnItemClickListener(OnItemClickListener onItemClickListener) {
        this.onItemClickListener = onItemClickListener;
    }

    public interface OnItemClickListener {
        void onItemClick(int index, Exploit item);
    }

    class ViewHolder extends RecyclerView.ViewHolder {

        @Bind(R.id.exploit_id)
        TextView exploitIdTV;
        @Bind(R.id.description)
        TextView exploitDescriptionTV;

        ViewHolder(View itemView) {
            super(itemView);
            ButterKnife.bind(this, itemView);
        }

        @OnClick(R.id.item)
        public void onItemClick() {
            if (onItemClickListener != null) {
                int adapterPosition = getAdapterPosition();
                onItemClickListener.onItemClick(adapterPosition, items.get(adapterPosition));
            }
        }
    }

}
